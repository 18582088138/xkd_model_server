cc_library(
    name = "ovms_lib",
    linkstatic = 1,
    srcs = [
        "avx_check.hpp",
        "config.cpp",
        "config.hpp",
        "deserialization.cpp",
        "deserialization.hpp",
        "directoryversionreader.hpp",
        "dl_node.cpp",
        "dl_node.hpp",
        "entry_node.cpp",
        "entry_node.hpp",
        "executinstreamidguard.hpp",
        "exit_node.cpp",
        "exit_node.hpp",
        "filesystem.hpp",
        "get_model_metadata_impl.cpp",
        "get_model_metadata_impl.hpp",
        "http_rest_api_handler.cpp",
        "http_rest_api_handler.hpp",
        "http_server.cpp",
        "http_server.hpp",
        "localfilesystem.cpp",
        "localfilesystem.hpp",
        "gcsfilesystem.cpp",
        "gcsfilesystem.hpp",
        "model.cpp",
        "model.hpp",
        "model_version_policy.cpp",
        "model_version_policy.hpp",
        "modelconfig.hpp",
        "modelmanager.cpp",
        "modelmanager.hpp",
        "modelinstance.cpp",
        "modelinstance.hpp",
        "modelversionstatus.hpp",
        "model_service.hpp",
        "model_service.cpp",
        "node.cpp",
        "node.hpp",
        "ovinferrequestsqueue.cpp",
        "ovinferrequestsqueue.hpp",
        "pipeline.cpp",
        "pipeline.hpp",
        "pipelinemessage.hpp",
        "modelinstancepredictrequestshandlescountguard.cpp",
        "modelinstancepredictrequestshandlescountguard.hpp",
        "prediction_service.cpp",
        "prediction_service.hpp",
        "prediction_service_utils.hpp",
        "prediction_service_utils.cpp",
        "rest_parser.cpp",
        "rest_parser.hpp",
        "rest_utils.cpp",
        "rest_utils.hpp",
        "s3filesystem.cpp",
        "s3filesystem.hpp",
        "azurefilesystem.cpp",
        "azurefilesystem.hpp",
        "serialization.cpp",
        "schema.hpp",
        "schema.cpp",
        "serialization.hpp",
        "server.cpp",
        "status.cpp",
        "status.hpp",
        "stringutils.hpp",
        "tensorinfo.hpp",
        "threadsafequeue.hpp",
        "timer.hpp",
    ],
    deps = [
        "@tensorflow_serving//tensorflow_serving/apis:prediction_service_cc_proto",
        "@tensorflow_serving//tensorflow_serving/apis:model_service_cc_proto",
        "@com_github_grpc_grpc//:grpc++",
        "@org_tensorflow//tensorflow/core:framework",
        "@rapidjson//:rapidjson",
        "@openvino//:openvino",
        "@spdlog//:spdlog",
        "@cxxopts//:cxxopts",
        "@awssdk//:s3",
        "@awssdk//:core",
        "@awssdk//:deps",
	"@cpprest//:sdk",
	"@azure//:storage",
	"@boost//:lib",
        "@com_github_googleapis_google_cloud_cpp//google/cloud/storage:storage_client",
        "@tensorflow_serving//tensorflow_serving/util/net_http/server/public:http_server",
        "@tensorflow_serving//tensorflow_serving/util/net_http/server/public:http_server_api",
        "@tensorflow_serving//tensorflow_serving/util:threadpool_executor",
        "@tensorflow_serving//tensorflow_serving/util:json_tensor",
    ],
    local_defines = [
        "SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_INFO"
    ]
)

cc_binary(
    name = "ovms",
    srcs = [
        "main.cpp",
    ],
    linkopts = [
        "-lstdc++fs",
        "-lssl",
        "-lcrypto"
    ],
    copts = [
        "-Wconversion"
    ],
    deps = [
        "//src:ovms_lib"
    ]
)

cc_test(
    name = "ovms_test",
    linkstatic = 1,
    srcs = [
        "test/deserialization_tests.cpp",
        "test/ensemble_tests.cpp",
        "test/get_model_metadata_response_test.cpp",
        "test/get_model_metadata_signature_test.cpp",
        "test/get_model_metadata_validation_test.cpp",
        "test/mockmodelinstancechangingstates.hpp",
        "test/model_service_test.cpp",
        "test/model_version_policy_test.cpp",
        "test/model_test.cpp",
        "test/modelinstance_test.cpp",
        "test/modelconfig_test.cpp",
        "test/modelmanager_test.cpp",
        "test/ovmsconfig_test.cpp",
        "test/modelversionstatus_test.cpp",
        "test/localfilesystem_test.cpp",
        "test/gcsfilesystem_test.cpp",
        "test/ovtestutils.hpp",
        "test/ovinferrequestqueue_test.cpp",
        "test/predict_validation_test.cpp",
        "test/prediction_service_test.cpp",
        "test/prediction_service_utils_test.cpp",
        "test/rest_parser_row_test.cpp",
        "test/rest_parser_column_test.cpp",
        "test/rest_parser_nonamed_test.cpp",
        "test/rest_utils_test.cpp",
        "test/serialization_tests.cpp",
        "test/stringutils_test.cpp",
        "test/test_utils.hpp",
        "test/threadsafequeue_test.cpp",
        "test/unit_tests.cpp",
    ],
    data = [
        "test/dummy/0/dummy.xml",
        "test/dummy/0/dummy.bin",
    ],
    linkopts = [
        "-lstdc++fs",
        "-lssl",
        "-lcrypto"
    ],
    deps = [
        "//src:ovms_lib",
        "@com_google_googletest//:gtest"
    ],
)
